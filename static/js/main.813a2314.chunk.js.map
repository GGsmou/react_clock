{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockTimerId","state","clockDate","Date","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","clockNameTimerId","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAYaA,EAAb,4MACEC,aAAe,EADjB,EAGEC,MAAyB,CACvBC,UAAW,IAAIC,MAJnB,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,aAAeK,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEL,UAAW,IAAIC,OAC/BK,QAAQC,KAAK,EAAKR,MAAMC,UAAUQ,cAAcC,OAAO,IAAK,MAC3D,OAXP,gCAcE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAChCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAhBpE,kCAoBE,WACER,OAAOW,cAAcZ,KAAKJ,gBArB9B,oBAwBE,WACE,IAAQE,EAAcE,KAAKH,MAAnBC,UACAW,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGf,EAAUQ,cAAcC,OAAO,IAAK,YArC/C,GAA2BO,IAAMC,WCPjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAW,WAHf,EAMEC,iBAAmB,EANrB,EAwBEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKvB,SAAS,CAAEkB,UAAU,KA1B9B,EA6BEM,YAAc,SAACF,GACbA,EAAMC,iBACN,EAAKvB,SAAS,CAAEkB,UAAU,KA/B9B,uDAQE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,cAAe7B,KAAKwB,mBAC9CI,SAASC,iBAAiB,QAAS7B,KAAK2B,aAExC3B,KAAKuB,iBAAmBtB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,QAdP,kCAiBE,WACEY,SAASE,oBAAoB,cAAe9B,KAAKwB,mBACjDI,SAASE,oBAAoB,QAAS9B,KAAK2B,aAE3C1B,OAAOW,cAAcZ,KAAKuB,oBArB9B,oBAkCE,WACE,MAAgCvB,KAAKH,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOZ,KAAMa,WAzClC,GAAyBR,IAAMC,WCb/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.813a2314.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\n\ninterface State {\n  clockDate: Date;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport class Clock extends React.Component<Props> {\n  clockTimerId = 0;\n\n  state: Readonly<State> = {\n    clockDate: new Date(),\n  };\n\n  componentDidMount() {\n    this.clockTimerId = window.setInterval(() => {\n      this.setState({ clockDate: new Date() });\n      console.info(this.state.clockDate.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.clockTimerId);\n  }\n\n  render(): React.ReactNode {\n    const { clockDate } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {clockDate.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  clockNameTimerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n\n    this.clockNameTimerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n\n    window.clearInterval(this.clockNameTimerId);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render(): React.ReactNode {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}